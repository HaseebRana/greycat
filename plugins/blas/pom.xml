<?xml version="1.0" encoding="UTF-8"?>
<!--

    Copyright 2017 The GreyCat Authors.  All rights reserved.
    <p>
    Licensed under the Apache License, Version 2.0 (the "License");
    you may not use this file except in compliance with the License.
    You may obtain a copy of the License at
    <p>
    http://www.apache.org/licenses/LICENSE-2.0
    <p>
    Unless required by applicable law or agreed to in writing, software
    distributed under the License is distributed on an "AS IS" BASIS,
    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    See the License for the specific language governing permissions and
    limitations under the License.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>greycat-blas</artifactId>
    <version>4-SNAPSHOT</version>
    <name>greycat-blas</name>

    <properties>
        <js.name>greycat.blas</js.name>
        <header.path>${basedir}/../../HEADER</header.path>
    </properties>

    <parent>
        <artifactId>greycat-parent</artifactId>
        <groupId>com.datathings.enterprise</groupId>
        <version>4-SNAPSHOT</version>
        <relativePath>../..</relativePath>
    </parent>

    <dependencies>
        <dependency>
            <groupId>com.datathings</groupId>
            <artifactId>greycat</artifactId>
            <version>${greycat.version}</version>
        </dependency>
        <dependency>
            <!-- WORKAROUND: https://github.com/sbt/sbt/issues/861 -->
            <groupId>net.sourceforge.f2j</groupId>
            <artifactId>arpack_combined_all</artifactId>
            <version>0.1</version>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>core</artifactId>
            <version>1.1.2</version>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_ref-osx-x86_64</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_ref-linux-x86_64</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_ref-linux-i686</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_ref-win-x86_64</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_ref-win-i686</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_ref-linux-armhf</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_system-osx-x86_64</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_system-linux-x86_64</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_system-linux-i686</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_system-linux-armhf</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_system-win-x86_64</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
        <dependency>
            <groupId>com.github.fommil.netlib</groupId>
            <artifactId>netlib-native_system-win-i686</artifactId>
            <version>1.1</version>
            <classifier>natives</classifier>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <plugin>
                <groupId>com.datathings</groupId>
                <artifactId>j2ts-mavenplugin</artifactId>
                <version>${java2typescript.plugin.version}</version>
                <executions>
                    <execution>
                        <id>ts-compile-ml</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>java2ts</goal>
                        </goals>
                        <configuration>
                            <name>${js.name}</name>
                            <headers>
                                <header>import {java,Long} from 'j2ts-jre';</header>
                                <header>import * as greycat from 'greycat';</header>
                                <header>declare function require(name:string);</header>
                            </headers>
                            <source>${basedir}/src/main/java</source>
                            <target>${basedir}/target/generated-sources</target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>ts-compile-test-ml</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>java2ts</goal>
                        </goals>
                        <configuration>
                            <name>test</name>
                            <headers>
                                <header>import {java,Long} from 'j2ts-jre';</header>
                                <header>import {org} from 'j2ts-junit';</header>
                                <header>import * as greycat from 'greycat';</header>
                                <header>import {greycatBlas} from '../classes-npm';</header>
                            </headers>
                            <testHeaders>
                                <testHeader>var greycatBlasTest = require('../test-classes-npm');</testHeader>
                            </testHeaders>
                            <source>${basedir}/src/test/java</source>
                            <target>${basedir}/target/generated-test-sources</target>
                            <withJUnit>true</withJUnit>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <id>compile</id>
                        <phase>compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy file="${basedir}/src/main/ts/tsconfig.json"
                                      todir="${basedir}/target/classes-npm"/>
                                <copy file="${basedir}/src/main/ts/package.json" todir="${basedir}/target/classes-npm"/>
                                <copy file="${basedir}/src/main/ts/readme.md" todir="${basedir}/target/classes-npm"/>
                                <copy file="${basedir}/target/generated-sources/greycat.blas.ts"
                                      todir="${basedir}/target/classes-npm"/>
                                <replace file="${basedir}/target/classes-npm/greycat.blas.ts" token="namespace greycat"
                                         value="export namespace greycatBlas"/>
                                <replace file="${basedir}/target/classes-npm/greycat.blas.ts" token="greycat.blas"
                                         value="greycatBlas.blas"/>
                                <replace file="${basedir}/target/classes-npm/package.json" token="GREYCAT_VERSION"
                                         value="${project.version}"/>
                                <replace file="${basedir}/target/classes-npm/package.json" token="J2TS_VERSION"
                                         value="${java2typescript.plugin.version}"/>
                                <replace file="${basedir}/target/classes-npm/package.json" token="-SNAPSHOT" value=""/>
                                <exec executable="npm" dir="${basedir}/target/classes-npm" failonerror="true">
                                    <arg value="link"/>
                                    <arg value="greycat"/>
                                </exec>
                                <exec executable="npm" dir="${basedir}/target/classes-npm" failonerror="true">
                                    <arg value="install"/>
                                </exec>
                                <copy file="${basedir}/build_netlib/netlib.js"
                                      todir="${basedir}/target/classes-npm"/>
                                <exec executable="${basedir}/target/classes-npm/node_modules/typescript/bin/tsc"
                                      dir="${basedir}/target/classes-npm/" failonerror="true"/>
                                <delete file="${basedir}/target/classes-npm/greycat.blas.ts"/>
                                <exec executable="npm" dir="${basedir}/target/classes-npm" failonerror="true">
                                    <arg value="link"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>compile-test</id>
                        <phase>test-compile</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <copy file="${basedir}/src/test/ts/package.json"
                                      todir="${basedir}/target/test-classes-npm"/>
                                <copy file="${basedir}/src/test/ts/tsconfig.json"
                                      todir="${basedir}/target/test-classes-npm"/>
                                <replace file="${basedir}/target/test-classes-npm/package.json" token="GREYCAT_VERSION"
                                         value="${project.version}"/>
                                <replace file="${basedir}/target/test-classes-npm/package.json" token="J2TS_VERSION"
                                         value="${java2typescript.plugin.version}"/>
                                <replace file="${basedir}/target/test-classes-npm/package.json" token="-SNAPSHOT"
                                         value=""/>
                                <copy file="${basedir}/target/generated-test-sources/test.ts"
                                      todir="${basedir}/target/test-classes-npm"/>
                                <concat append="true" destfile="${basedir}/target/test-classes-npm/test.ts">
                                    export = greycatBlasTest;
                                </concat>
                                <replace file="${basedir}/target/test-classes-npm/test.ts" token="greycat.blas"
                                         value="greycatBlas.blas"/>
                                <!--
                                <exec executable="npm" dir="${basedir}/target/test-classes-npm" failonerror="true">
                                    <arg value="link" />
                                    <arg value="j2ts-jre" />
                                </exec>
                                <exec executable="npm" dir="${basedir}/target/test-classes-npm" failonerror="true">
                                    <arg value="link" />
                                    <arg value="j2ts-junit" />
                                </exec>
                                -->
                                <exec executable="npm" dir="${basedir}/target/test-classes-npm" failonerror="true">
                                    <arg value="link"/>
                                    <arg value="greycat"/>
                                </exec>
                                <exec executable="npm" dir="${basedir}/target/test-classes-npm" failonerror="true">
                                    <arg value="install"/>
                                </exec>
                                <exec executable="${basedir}/target/test-classes-npm/node_modules/typescript/bin/tsc"
                                      dir="${basedir}/target/test-classes-npm" failonerror="true"/>
                                <copy file="${basedir}/target/generated-test-sources/testsRunner.js"
                                      todir="${basedir}/target/test-classes-npm"/>
                                <concat append="false" destfile="${basedir}/target/test-classes-npm/jasmine.js">
                                    var Jasmine = require('jasmine');
                                    var jasmine = new Jasmine();
                                    jasmine.execute(['testsRunner.js']);
                                </concat>
                            </target>
                        </configuration>
                    </execution>
                    <execution>
                        <id>run-test</id>
                        <phase>test</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <echo message="Execute JS tests"/>
                                <exec executable="node" dir="${basedir}/target/test-classes-npm" failonerror="true">
                                    <arg value="jasmine.js"/>
                                </exec>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>


</project>
